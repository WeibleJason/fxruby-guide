<?xml version="1.0" encoding="UTF-8"?>
<appendix id="subversion">
  <title>Getting the Sources from Subversion</title>

  <para>All of the source code for FXRuby is available for anonymous,
  read-only <ulink url="http://subversion.tigris.org/">Subversion</ulink>
  access. This chapter describes how to check out the sources for the
  development release of FXRuby and then build FXRuby from those sources. The
  information in this chapter builds on the basic Subversion instructions
  provided for any RubyForge hosted project, and specifically those <ulink
  url="http://rubyforge.org/scm/?group_id=300">instructions</ulink> for the
  FXRuby project hosted at RubyForge.</para>

  <para>There are some prerequisites. Obviously, you're going to need to have
  some kind of Subversion client installed on your system and have a clue
  about how to use it to check out code from a remote repository. Please do
  not send me questions about how to install or use Subversion. A good
  starting point for documentation about Subversion is the <ulink
  url="http://subversion.tigris.org/">home page</ulink>, and especially the
  <ulink url="http://svnbook.red-bean.com/">book</ulink>.</para>

  <para>You're also going to need to have a working <ulink
  url="http://www.swig.org/">SWIG</ulink> installation so that you can
  generate the C++ source files from the SWIG interface files. As of this
  writing, FXRuby requires SWIG version 1.3.22; later versions of SWIG will
  not work, nor will versions earlier than about 1.3.15.</para>

  <simplesect>
    <title>Checking out the code</title>

    <para>To check out the development version (i.e. the trunk) for FXRuby,
    type the following command:</para>

    <para><screen>svn checkout svn://rubyforge.org/var/svn/fxruby/trunk/FXRuby</screen></para>

    <para>Next, you'll need to use SWIG to generate the C++ source code from
    the SWIG interface files. To do that, type:</para>

    <para><screen>rake swig</screen></para>

    <para>At this point, you should be ready to change to the top-level
    directory and go through the normal build and installation process, as
    described in an earlier chapter.</para>
  </simplesect>
</appendix>
